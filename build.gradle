plugins {
  id "java"
  id "application"
  id "org.openjfx.javafxplugin" version "0.0.8"
  id "de.undercouch.download" version "4.1.1"
  id "org.sonarqube" version "3.5.0.2730"
}

mainClassName = "de.unitrier.st.core.Main"

javafx {
  modules = ["javafx.controls"]
}

repositories {
  mavenCentral()
}

dependencies {
  implementation group: 'com.google.code.gson', name: 'gson', version: '2.10'
  testImplementation group: 'junit', name: 'junit', version: '4.13.2'
}

sonarqube {
  properties {
    property "sonar.projectKey", "FST_CI"
    property "sonar.organization", "janschu99"
    property "sonar.host.url", "https://sonarcloud.io"
  }
}

sourceSets {
  main {
    java {
      srcDir "src/main/java"
      excludes = ["**/ui/*.java"]
    }
  }
}

tasks.getByName("run").mustRunAfter("test")

if (project.gradle.startParameter.taskNames.contains("buildUI") || project.gradle.startParameter.taskNames.contains("runUI")) {
  sourceSets.main.java.excludes = []
  mainClassName="de.unitrier.st.ui.Ui"
}

task downloadData(type: Download) {
  src "https://datahub.io/core/covid-19/r/covid-19_zip.zip"
  dest buildDir
  onlyIfModified true
}

task unzipData(type: Copy) {
  dependsOn "downloadData"
  from zipTree(file("$buildDir/covid-19_zip.zip"))
  into file("$buildDir/resources")
}

task copyData(type: Copy) {
  dependsOn "unzipData"
  from file("$buildDir/resources/data/countries-aggregated_json.json")
  into file("$buildDir/../src/main/resources")
}

task buildCore(dependsOn: assemble) {
  finalizedBy "test"
}

task buildUI(dependsOn: assemble) {
  finalizedBy "test"
}

task runCore(dependsOn: buildCore) {
  dependsOn "copyData"
  dependsOn "test"
  finalizedBy "run"
}

task runUI(dependsOn: buildUI) {
  dependsOn "copyData"
  dependsOn "test"
  finalizedBy "run"
}
